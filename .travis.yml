# Use Dockerized infrastructure
sudo: false

# Use node_js environnement
language: node_js
node_js:
  - "6"

# Cache Gcloud SDK between commands
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

# Install services
services:
  - docker

# Set env vars
env:
  global:
    - GOOGLE_APPLICATION_CREDENTIALS=~/gcloud-service-key.json
    - NODE_ENV=CI

install:
  - npm install

script:
  - npm test

before_deploy:
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc
  - gcloud --quiet version
  - gcloud --quiet components update
  - gcloud --quiet components beta update
  - gcloud --quiet components update kubectl

deploy:
  - provider: script
    script: ./deploy-staging.sh
    skip_cleanup: true
    on:
      branch: development
  - provider: script
    script: ./deploy-production.sh
    skip_cleanup: true
    on:
      branch: master













language: node_js
node_js:
  - "stable"

sudo: required

services:
  - docker

before_install:
  - docker build -t "$DOCKER_USERNAME"/spotify-graphql .
  

install:
  npm install && npm run test

script:
  - docker images "$DOCKER_USERNAME"/spotify-graphql

after_success:
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
    docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
    docker push "$DOCKER_USERNAME"/spotify-graphql;
    fi
  
